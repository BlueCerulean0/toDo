"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatetodo"]("main",{

/***/ "./src/create.js":
/*!***********************!*\
  !*** ./src/create.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPop: () => (/* binding */ createPop),\n/* harmony export */   toDoInfo: () => (/* binding */ toDoInfo)\n/* harmony export */ });\n/* harmony import */ var luxon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! luxon */ \"./node_modules/luxon/src/luxon.js\");\n\nconst now = luxon__WEBPACK_IMPORTED_MODULE_0__.DateTime.now();\n\nconst content = document.querySelector('.content');\nconst addTodo = document.createElement('div');\nconst general  = document.createElement('div');\n\nlet toDoInfo = [];\n\nfunction createPop() {\n\n    try {\n        toDoInfo = JSON.parse(localStorage.getItem(\"toDoInfo\")) || [];\n    } catch (error) {\n        console.error(\"Something went wrong\", error);\n        toDoInfo = [];\n    }\n\n    addTodo.classList.add('addTodo');\n    general.classList.add('general');\n\n    general.innerHTML =\n        `<h1>General</h1>\n        <div class=\"sortAndCreate\">\n            <button class=\"sort\">All</button>\n            <button class=\"create\">+ Create Todo</button>\n        </div>`;\n    content.appendChild(general);\n\n    addTodo.innerHTML = `\n            <form id=\"todoForm\">\n                <span><p>Add ToDo</p></span>\n                <fieldset>\n                    <label for=\"title\">Title:</label>\n                    <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Enter title\" required>\n\n                    <label for=\"description\">Description:</label>\n                    <textarea name=\"description\" id=\"description\"></textarea>\n                </fieldset>\n\n                <fieldset class=\"form-fields\">\n                    <div class=\"time-container\">\n                        <label for=\"time\">Time:</label>\n                        <input type=\"time\" id=\"time\" name=\"time\">\n                    </div>\n                    <div class=\"due-date-container\">\n                        <label for=\"date\">Due Date:</label>\n                        <input type=\"date\" id=\"date\" name=\"date\" required>\n                    </div>\n                    <div class=\"priority-container\">\n                        <label for=\"priority\">Priority:</label>\n                        <select name=\"priority\" id=\"priority\" required>\n                            <option value=\"Low\">Low</option>\n                            <option value=\"Medium\">Medium</option>\n                            <option value=\"High\">High</option>\n                        </select>\n                    </div>\n                </fieldset>\n\n                <fieldset class=\"form-actions\">\n                    <button type=\"button\" class=\"close\">Close</button>\n                    <button type=\"submit\" class=\"add\">Add</button>\n                </fieldset>\n            </form>\n    `;\n    content.appendChild(addTodo)\n\n    const dateInput = document.querySelector('#date');\n    const timeInput = document.querySelector('#time');\n\n    dateInput.value = now.toISODate();\n    timeInput.value = now.toFormat('hh:mm');\n\n    //adding it to the dom\n    const projectContainer = document.createElement('div');\n    projectContainer.classList.add('projectContainer');\n    general.appendChild(projectContainer);\n\n    renderTodos();\n\n    const todoForm = document.querySelector('#todoForm')\n\n    //Form event listener\n    let divToUpdate;\n    projectContainer.addEventListener('click', (event) => {\n        if (event.target.classList.contains('edit')) {\n\n            const todoDiv = event.target.closest('[data-id]');\n            const dataId = todoDiv.dataset.id;\n            console.log(dataId);\n            console.log(toDoInfo);\n            const todoItem = toDoInfo.find(todo => todo.dataId === Number(dataId))\n            console.log(todoItem)\n\n            todoForm.title.value = todoItem.title;\n            todoForm.description.value = todoItem.description;\n            todoForm.time.value = todoItem.time;\n            todoForm.date.value = todoItem.date;\n            todoForm.priority.value = todoItem.priority;\n\n            divToUpdate = dataId;\n            todoForm.dataset.mode = 'edit';\n            addTodo.classList.remove('hide');\n            addTodo.classList.add('show');\n\n        }\n    })\n\n    todoForm.addEventListener('submit', (event) => {\n        event.preventDefault()\n\n        let mode = todoForm.dataset.mode;\n        const title = todoForm.title.value;\n        const description = todoForm.description.value;\n        const time = todoForm.time.value;\n        const date = todoForm.date.value;\n        const priority = todoForm.priority.value;\n\n        if (mode === 'edit') {\n            const todoItem = toDoInfo.find(todo => todo.dataId === Number(divToUpdate))\n\n            todoItem.title = title;\n            todoItem.description = description;\n            todoItem.time = time;\n            todoItem.date = date;\n            todoItem.priority = priority;\n\n            todoForm.dataset.mode = 'add';\n        } else {\n            let newTodo = new TodoItem(Date.now(), title, description, time, date, priority)\n            toDoInfo.push(newTodo)\n        }\n\n        localStorage.setItem('toDoInfo', JSON.stringify(toDoInfo));\n        renderTodos()\n        todoForm.reset();\n        addTodo.classList.remove('show');\n        addTodo.classList.add('hide');\n    });\n\n    projectContainer.addEventListener('click', (event) => {\n        if (event.target.classList.contains('done')) {\n            const todoDiv = event.target.closest('[data-id]');\n            const divIdToRemove = todoDiv.dataset.id;\n\n            toDoInfo = toDoInfo.filter(todo => todo.dataId !== Number(divIdToRemove))\n\n            todoDiv.classList.add('hide');\n            localStorage.setItem('toDoInfo', JSON.stringify(toDoInfo));\n            renderTodos()\n        }\n    })\n\n    function renderTodos() {\n        projectContainer.innerHTML = ''\n\n        toDoInfo.forEach(todo => {\n            const todoHTML = `\n                <div data-id=\"${todo.dataId}\">\n                    <span>\n                        <span>\n                            <h3>${todo.title}</h3>\n                            <button class=\"done\">Done</button>\n                        </span>\n                        <button class=\"edit\">Edit</button>\n                    </span>\n                    <p>${todo.description}</p>\n                    <span>\n                        <p><span>Due Date: ${todo.date}</span> </p>\n                        <p><span>Priority: ${todo.priority}</span></p>\n                    </span>\n                </div>\n            `;\n\n            projectContainer.insertAdjacentHTML('beforeend', todoHTML);\n\n        })\n\n    }\n\n    // The pop-up window for the add ToDo form\n    const create = document.querySelector('.create');\n    const close = document.querySelector('.close');\n\n    create.addEventListener('click', (event) => {\n        addTodo.classList.remove('hide')\n        addTodo.classList.add('show')\n    })\n\n    close.addEventListener('click', (event) => {\n        todoForm.dataset.mode = 'add';\n\n        addTodo.classList.remove('show')\n        addTodo.classList.add('hide')\n        todoForm.title.value = \"\";\n        todoForm.description.value = \"\";\n        todoForm.time.value = timeInput.value = now.toFormat('hh:mm');\n        todoForm.date.value = now.toISODate();\n\n        todoForm.priority.value = \"Low\";\n    })\n}\n\nfunction TodoItem(dataId, title, description, time, date, priority) {\n    this.dataId = dataId;\n    this.title = title;\n    this.description = description;\n    this.time = time;\n    this.date = date;\n    this.priority = priority;\n}\n\n\n\n\n//# sourceURL=webpack://todo/./src/create.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("e729f25daa1cd40f392b")
/******/ })();
/******/ 
/******/ }
);